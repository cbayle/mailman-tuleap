--- mailman.orig/Mailman/Archiver/Archiver.py	2008-01-16 09:04:26.000000000 +0100
+++ mailman/Mailman/Archiver/Archiver.py	2008-01-16 09:12:53.000000000 +0100
@@ -201,20 +201,25 @@
                 # Archive to mbox only.
                 return
         txt = str(msg)
-        # should we use the internal or external archiver?
+
+	# keep using the internal archiver
+        f = StringIO(txt)
+        import HyperArch
+        h = HyperArch.HyperArchive(self)
+        h.processUnixMailbox(f)
+        h.close()
+        f.close()
+        
+	# now, use the external archiver
         private_p = self.archive_private
         if mm_cfg.PUBLIC_EXTERNAL_ARCHIVER and not private_p:
             self.ExternalArchive(mm_cfg.PUBLIC_EXTERNAL_ARCHIVER, txt)
         elif mm_cfg.PRIVATE_EXTERNAL_ARCHIVER and private_p:
             self.ExternalArchive(mm_cfg.PRIVATE_EXTERNAL_ARCHIVER, txt)
-        else:
-            # use the internal archiver
-            f = StringIO(txt)
-            import HyperArch
-            h = HyperArch.HyperArchive(self)
-            h.processUnixMailbox(f)
-            h.close()
-            f.close()
+        
+	# Mark Sapiro: "The above patch looks fine to me for what you want to do."
+	# http://mail.python.org/pipermail/mailman-users/2008-January/059900.html    
+        
 
     #
     # called from MailList.MailList.Save()
